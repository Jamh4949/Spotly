name: Spotly CI/CD Pipeline

on:
  push:
    branches: [ 'feature/*' ]
  pull_request:
    branches: [ 'testing', 'staging', 'feature/*' ]

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    # Permite crear PRs incluso si CI falla inicialmente
    continue-on-error: ${{ github.event_name == 'pull_request' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier Check
        run: npm run format -- --check

      - name: TypeScript Type Checking
        run: npm run type-check

      - name: Run Tests
        run: npm test

      - name: Run Build
        run: npm run build

  deploy-testing:
    name: Deploy to Testing
    runs-on: ubuntu-latest
    needs: quality-checks
    environment: testing
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Testing)
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--env NEXT_PUBLIC_ENV=testing'

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: quality-checks
    environment: staging
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod --env NEXT_PUBLIC_ENV=staging'
